{"version":3,"sources":["../../src/util/builder.js"],"names":["_","Builder","options","seriesList","groupedSeries","groupBy","bind","_shortName","map","rowSeries","shortName","name","cells","_cellsFor","series","nameComponents","split","components","target","nc","parseInt","join","columns","column","columnSeries","_filterByColumn","_peakForColumn","maxes","_maxPoint","datapoints","regex","RegExp","filter","match","points","point","length","reduce","max"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;;;;;;;;;;;;;;;;;;;;yBAEMC,O;AACX,yBAAaC,OAAb,EAAsB;AAAA;;AACpB,eAAKA,OAAL,GAAeA,OAAf;AACD;;;;iCAEsB;AAAA;;AAAA,gBAAjBC,UAAiB,uEAAJ,EAAI;;AACrB,gBAAIC,gBAAgBJ,EAAEK,OAAF,CAAUF,UAAV,EAAsBH,EAAEM,IAAF,CAAO,KAAKC,UAAZ,EAAwB,IAAxB,CAAtB,CAApB;;AAEA,mBAAOP,EAAEQ,GAAF,CAAMJ,aAAN,EAAqB,UAACK,SAAD,EAAYC,SAAZ,EAA0B;AACpD,qBAAO,EAAEC,MAAMD,SAAR,EAAmBE,OAAO,MAAKC,SAAL,CAAeJ,SAAf,CAA1B,EAAP;AACD,aAFM,CAAP;AAGD;;;qCAEWK,M,EAAQ;AAClB,gBAAIC,iBAAiB,KAAKb,OAAL,CAAaa,cAAb,CAA4BC,KAA5B,CAAkC,GAAlC,CAArB;AACA,gBAAIC,aAAaH,OAAOI,MAAP,CAAcF,KAAd,CAAoB,GAApB,CAAjB;AACA,mBAAOhB,EAAEQ,GAAF,CAAMO,cAAN,EAAsB,UAACI,EAAD;AAAA,qBAAQF,WAAWG,SAASD,EAAT,CAAX,CAAR;AAAA,aAAtB,EAAwDE,IAAxD,CAA6D,GAA7D,CAAP;AACD;;;oCAEUZ,S,EAAW;AAAA;;AACpB,mBAAOT,EAAEQ,GAAF,CAAM,KAAKN,OAAL,CAAaoB,OAAnB,EAA4B,UAACC,MAAD,EAAY;AAC7C,kBAAIC,eAAe,OAAKC,eAAL,CAAqBF,MAArB,EAA6Bd,SAA7B,CAAnB;AACA,qBAAO,OAAKiB,cAAL,CAAoBF,YAApB,CAAP;AACD,aAHM,CAAP;AAID;;;yCAEerB,U,EAAY;AAAA;;AAC1B,gBAAIwB,QAAQxB,WAAWK,GAAX,CAAe,UAACM,MAAD;AAAA,qBAAY,OAAKc,SAAL,CAAed,OAAOe,UAAtB,CAAZ;AAAA,aAAf,CAAZ;AACA,mBAAO,KAAKD,SAAL,CAAeD,KAAf,CAAP;AACD;;;0CAEgBJ,M,EAAQpB,U,EAAY;AACnC,gBAAI2B,QAAQ,IAAIC,MAAJ,CAAWR,OAAOO,KAAlB,CAAZ;AACA,mBAAO9B,EAAEgC,MAAF,CAAS7B,UAAT,EAAqB,UAACW,MAAD;AAAA,qBAAYA,OAAOI,MAAP,CAAce,KAAd,CAAoBH,KAApB,CAAZ;AAAA,aAArB,CAAP;AACD;;;oCAEUI,M,EAAQ;AACjBA,qBAASlC,EAAEgC,MAAF,CAASE,MAAT,EAAiB;AAAA,qBAASC,MAAM,CAAN,KAAY,IAArB;AAAA,aAAjB,CAAT;AACA,gBAAID,OAAOE,MAAP,KAAkB,CAAtB,EAAyB,OAAO,CAAC,IAAD,EAAO,IAAP,CAAP;AACzB,mBAAOF,OAAOG,MAAP,CAAc,UAACC,GAAD,EAAMH,KAAN;AAAA,qBAAgBA,MAAM,CAAN,IAAWG,IAAI,CAAJ,CAAX,GAAoBH,KAApB,GAA4BG,GAA5C;AAAA,aAAd,EAA+DJ,OAAO,CAAP,CAA/D,CAAP;AACD","file":"builder.js","sourcesContent":["import _ from 'lodash'\n\nexport class Builder {\n  constructor (options) {\n    this.options = options\n  }\n\n  call (seriesList = []) {\n    var groupedSeries = _.groupBy(seriesList, _.bind(this._shortName, this))\n\n    return _.map(groupedSeries, (rowSeries, shortName) => {\n      return { name: shortName, cells: this._cellsFor(rowSeries) }\n    })\n  }\n\n  _shortName (series) {\n    var nameComponents = this.options.nameComponents.split(',')\n    var components = series.target.split('.')\n    return _.map(nameComponents, (nc) => components[parseInt(nc)]).join('.')\n  }\n\n  _cellsFor (rowSeries) {\n    return _.map(this.options.columns, (column) => {\n      var columnSeries = this._filterByColumn(column, rowSeries)\n      return this._peakForColumn(columnSeries)\n    })\n  }\n\n  _peakForColumn (seriesList) {\n    var maxes = seriesList.map((series) => this._maxPoint(series.datapoints))\n    return this._maxPoint(maxes)\n  }\n\n  _filterByColumn (column, seriesList) {\n    var regex = new RegExp(column.regex)\n    return _.filter(seriesList, (series) => series.target.match(regex))\n  }\n\n  _maxPoint (points) {\n    points = _.filter(points, point => point[0] != null)\n    if (points.length === 0) return [null, null]\n    return points.reduce((max, point) => point[0] > max[0] ? point : max, points[0])\n  }\n}\n"]}