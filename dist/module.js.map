{"version":3,"sources":["../src/module.js"],"names":["_","kbn","fileExport","MetricsPanelCtrl","Builder","Sorter","Exporter","panelDefaults","defaultColor","decimals","nameComponents","columns","sortColumn","sortMultiplier","Ctrl","$scope","$injector","defaults","panel","events","on","onInitEditMode","bind","onDataReceived","onRender","onInitPanelActions","builder","sorter","exporter","rows","addEditorTab","unitFormats","getUnitFormats","seriesList","render","call","sort","actions","push","text","click","title","regex","format","showDate","index","splice","column","value","toggle","valueFormats","icon","saveSaveBlob","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash'\nimport kbn from 'app/core/utils/kbn'\nimport * as fileExport from 'app/core/utils/file_export'\nimport {MetricsPanelCtrl} from 'app/plugins/sdk'\nimport {Builder} from './util/builder'\nimport {Sorter} from './util/sorter'\nimport {Exporter} from './util/exporter'\n\nconst panelDefaults = {\n  defaultColor: 'rgb(117, 117, 117)',\n  decimals: 2,\n  nameComponents: '1,2,3',\n  columns: [],\n  sortColumn: -1,\n  sortMultiplier: 1\n}\n\nclass Ctrl extends MetricsPanelCtrl {\n  constructor ($scope, $injector) {\n    super($scope, $injector)\n    _.defaults(this.panel, panelDefaults)\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this))\n    this.events.on('data-received', this.onDataReceived.bind(this))\n    this.events.on('render', this.onRender.bind(this))\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this))\n\n    this.builder = new Builder(this.panel)\n    this.sorter = new Sorter(this.panel)\n    this.exporter = new Exporter(this.panel.columns)\n    this.rows = []\n  }\n\n  onInitEditMode () {\n    this.addEditorTab('Options', 'public/plugins/btplc-peak-report-panel/editor.html')\n    this.unitFormats = kbn.getUnitFormats()\n  }\n\n  onDataReceived (seriesList) {\n    this.seriesList = seriesList\n    this.render()\n  }\n\n  onRender () {\n    this.rows = this.builder.call(this.seriesList)\n    this.rows = this.sorter.sort(this.rows)\n  }\n\n  onInitPanelActions (actions) {\n    actions.push({text: 'Export CSV', click: 'ctrl.exportCSV()'})\n  }\n\n  onEditorAddColumnClick () {\n    this.panel.columns.push({ title: '', regex: '', format: 'none', showDate: false })\n    this.render()\n  }\n\n  onEditorRemoveColumnClick (index) {\n    this.panel.columns.splice(index, 1)\n    this.render()\n  }\n\n  onEditorFormatSelect (format, column) {\n    column.format = format.value\n    this.render()\n  }\n\n  onColumnClick (index) {\n    this.sorter.toggle(index)\n    this.render()\n  }\n\n  format (value, index) {\n    var column = this.panel.columns[index]\n    return kbn.valueFormats[column.format](value, this.panel.decimals, null)\n  }\n\n  sortIcon (index) {\n    return this.sorter.icon(index)\n  }\n\n  exportCSV () {\n    fileExport.saveSaveBlob(this.exporter.call(this.rows), 'grafana_data_export')\n  }\n}\n\nCtrl.templateUrl = 'module.html'\nexport { Ctrl as PanelCtrl }\n"]}